#!/bin/bash
set -euo pipefail

show_help() {
  echo "Usage: ${FUNCNAME[0]} --lang <lang-code> [--dry-run]"
  echo "  --lang      ISO 639-2 language code of audio to keep (e.g. eng, deu)"
  echo "  --dry-run   Only show what would be done"
  exit 0
}

LANG_CODE="eng"
DRY_RUN=false

while [[ $# -gt 0 ]]; do
  case "$1" in
    --lang) LANG_CODE="$2"; shift 2 ;;
    --dry-run) DRY_RUN=true; shift ;;
    --help|-h) show_help ;;
    *) echo "Unknown option: $1"; show_help ;;
  esac
done

[[ -z "$LANG_CODE" ]] && show_help

for file in *.mkv; do
  echo "Processing: $file"
  ID=$(mkvmerge -i --identification-format json "$file" \
       | jq -r ".tracks[] | select(.type==\"audio\" and .properties.language==\"$LANG_CODE\") | .id" | head -n1)

  if [[ -z "$ID" ]]; then
    echo "  No $LANG_CODE audio track found, skipping"
    continue
  fi

  OUT="cleaned_${file}"
  CMD=(mkvmerge --output "$OUT" --audio-tracks "$ID" --no-subtitles "$file")
  if $DRY_RUN; then
    echo "  Would run: ${CMD[*]}"
  else
    "${CMD[@]}"
    echo "  Created: $OUT"
  fi
done
