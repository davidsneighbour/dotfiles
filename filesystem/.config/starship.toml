# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

palette = "dracula"

# Inserts a blank line between shell prompts
add_newline = true

# A continuation prompt that displays two filled-in arrows
continuation_prompt = '➜ '

# Replace the '❯' symbol in the prompt with '➜'
[character]
success_symbol = '[➜](bold green)'

# Disable the package module, hiding it from the prompt completely
[package]
disabled = true

[nodejs]
format = '[Node $version](bold green) '
version_format = '${raw}'
not_capable_style = 'bold blink red'

[golang]
format = '[Go $version](bold cyan) '
version_format = '${raw}'

[git_branch]
style = "bold mauve"

[custom.hugo]
when = '''find . -maxdepth 2 -regextype posix-extended -regex './(hugo|config)\.(toml|ya?ml|json)$|./config/_default$' | grep -q .'''
## when = '''find . -maxdepth 1 -regextype posix-extended -regex './(hugo|config)\.(toml|ya?ml|json)$|./config/_default$' | grep -q .'''
format = '[Hugo ${output}](bold #c9177e) '
command = "hugo version | sed -E 's/.*v([0-9]+\\.[0-9]+\\.[0-9]+).*/\\1/'"
description = "Hugo version installed and used in the current directory"
os = "linux" # might be even ["linux", "macos"]

[custom.sudo]
description = "valid sudo timestamp marker"
command = "echo -n '!'"
format = "[$symbol$output]($style) "
style = "bold fg:bright-red"
when = "sudo -vn &>/dev/null"

[custom.git_status]
command = '''
git_status=$(git status --porcelain)
# Untracked or Deleted (unstaged) files - Red
if echo ${git_status} | grep -qe '^?? ' -e '^[MARCDU ]D ' -e '^D[ UM]'; then
    echo -n $'\e[31m●'
fi

# Modified (unstaged) and Renamed files - Yellow
if echo ${git_status} | grep -qe '^[ MARC]M ' -e '^R[ MD] '; then
    echo -n $'\e[33m●'
fi

# Staged files (including Deleted) - Green
if echo ${git_status} | grep -qe '^A[ MDAU] ' -e '^M[ MD] ' -e '^UA' -e '^D '; then
    echo -n $'\e[32m●'
fi
'''
when = 'git rev-parse --is-inside-work-tree >/dev/null 2>&1'
format = '( $output)'

#[custom.live-clock-icon]
#command = 'echo "" | cut -c $(($(date +%H)%12+1))'
#description = "Live updating clock icon, changes hourly. Icons can be customized to your liking."
#when = true

#[custom.reponame]
#require_repo=true
#symbol=' '
#command="""
#git ls-remote --get-url | sed 's#.*:\\(.*\\).git#\\1#'
#""" 
#description="display the directory root of the current repo"
#when=true

# [directory]
# truncation_length = 4
# style = "bold lavender"

# Palette definitions
[palettes.catppuccin_mocha]
rosewater = "#f5e0dc"
flamingo = "#f2cdcd"
pink = "#f5c2e7"
mauve = "#cba6f7"
red = "#f38ba8"
maroon = "#eba0ac"
peach = "#fab387"
yellow = "#f9e2af"
green = "#a6e3a1"
teal = "#94e2d5"
sky = "#89dceb"
sapphire = "#74c7ec"
blue = "#89b4fa"
lavender = "#b4befe"
text = "#cdd6f4"
subtext1 = "#bac2de"
subtext0 = "#a6adc8"
overlay2 = "#9399b2"
overlay1 = "#7f849c"
overlay0 = "#6c7086"
surface2 = "#585b70"
surface1 = "#45475a"
surface0 = "#313244"
base = "#1e1e2e"
mantle = "#181825"
crust = "#11111b"



#format = """$all\
#$fill\
#${custom.wttr-in}\
#$line_break\
#$jobs\
#$battery\
#$time\
#$status\
#$os\
#$container\
#$shell\
#$character"""
#
#[custom.wttr-in]
#description = "Weather info by wttr.in"
#command = "echo -n $(curl wttr.in/?format=3)"
#shell = "/bin/sh"
#when = """ true """
#symbol = '🌡️ ' 
#command = 'CACHE_FILE="$HOME/.cache/weather.txt"; CACHE_TIME=600; if [[ -f "$CACHE_FILE" && $(( $(date +%s) - $(stat -f "%m" "$CACHE_FILE") )) -lt $CACHE_TIME ]]; then echo "$(cat "$CACHE_FILE")"; else echo "Loading..."; (curl -s wttr.in/?format="%C+%t" > "$CACHE_FILE" &) fi'


[palettes.dracula]
background = "#282a36"
current_line = "#44475a"
foreground = "#f8f8f2"
comment = "#6272a4"
cyan = "#8be9fd"
green = "#50fa7b"
orange = "#ffb86c"
pink = "#ff79c6"
purple = "#bd93f9"
red = "#ff5555"
yellow = "#f1fa8c"
