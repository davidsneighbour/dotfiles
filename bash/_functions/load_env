#!/bin/bash

# Function to load environment variables from the ~/.env file and then from the .env file in the current directory.
load_env() {
  local home_env="${HOME}/.env"
  local local_env="./.env"
  local debug=0

  # Process command-line options
  for arg in "$@"; do
    case ${arg} in
    --help)
      echo "Usage: load_env [--help] [--debug]"
      echo "Load environment variables from the system-wide and local .env files."
      echo "--debug: Enable detailed debug output."
      return 0
      ;;
    --debug)
      debug=1
      shift # Remove --debug from processing
      ;;
    *)
      # Unknown option
      echo "Unknown option: ${arg}"
      echo "Use --help for usage information."
      return 1
      ;;
    esac
  done

  # Resolve real paths and load environment variables from the system-wide .env file
  home_env=$(realpath -e "${home_env}" 2>/dev/null)
  if [[ -f "${home_env}" ]]; then
    if [[ ${debug} -eq 1 ]]; then echo "Loading environment variables from ${home_env}"; fi
    set -a # automatically export all variables
    # shellcheck disable=SC1090
    if ! source "${home_env}"; then
      echo "Failed to source ${home_env}"
      set +a
      return 1
    fi
    set +a
  elif [[ ${debug} -eq 1 ]]; then
    echo "No system-wide .env file found at ${home_env}"
  fi

  # Resolve real paths and override with local .env file if it exists
  local_env=$(realpath -e "${local_env}" 2>/dev/null)
  if [[ -f "${local_env}" ]]; then
    if [[ ${debug} -eq 1 ]]; then echo "Overriding with local .env file from ${local_env}"; fi
    set -a # automatically export all variables
    # shellcheck disable=SC1090
    if ! source "${local_env}"; then
      echo "Failed to source ${local_env}"
      set +a
      return 1
    fi
    set +a
  elif [[ ${debug} -eq 1 ]]; then
    echo "No local .env file found in the current directory"
  fi
}

# Example usage: load_env, load_env --debug, or load_env --help
