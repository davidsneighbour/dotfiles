#!/bin/bash

function glone() {
  local REPO_URL=$1
  local FORCE_HTTPS=false
  local USERNAME
  local REPO_NAME
  local REPO_PATH

  # Check for --force-https flag
  if [[ "$2" == "--force-https" ]]; then
    FORCE_HTTPS=true
  fi

  # Transform HTTPS to SSH format unless forced to use HTTPS
  if [[ "${REPO_URL}" == https://* && "${FORCE_HTTPS}" == false ]]; then
    # Convert HTTPS URL to SSH format
    USERNAME=$(cut -d'/' -f4 <<<"${REPO_URL}")
    REPO_NAME=$(cut -d'/' -f5 <<<"${REPO_URL}" | sed 's/\.git$//')
    REPO_URL="git@github.com:${USERNAME}/${REPO_NAME}.git"
  elif [[ "${REPO_URL}" == *@* ]]; then
    # Handle SSH URL directly
    USERNAME=$(cut -d':' -f2 <<<"${REPO_URL}" | cut -d'/' -f1)
    REPO_NAME=$(cut -d'/' -f2 <<<"${REPO_URL}" | sed 's/\.git$//')
  else
    # Handle HTTPS URL if forced or already HTTPS
    USERNAME=$(cut -d'/' -f4 <<<"${REPO_URL}")
    REPO_NAME=$(cut -d'/' -f5 <<<"${REPO_URL}" | sed 's/\.git$//')
  fi

  # Construct the path as ~/github.com/username/reponame
  REPO_PATH="${HOME}/github.com/${USERNAME}/${REPO_NAME}"

  # Create the directory path
  mkdir -p "${REPO_PATH}"

  # Clone the repository into the determined path
  git clone "${REPO_URL}" "${REPO_PATH}"
}

# Usage:
# glone "https://github.com/dracula/plymouth.git"               # Clones via SSH (default behavior)
# glone "https://github.com/dracula/plymouth.git" --force-https # Clones via HTTPS
# glone "git@github.com:dracula/plymouth.git"                   # Clones via SSH
